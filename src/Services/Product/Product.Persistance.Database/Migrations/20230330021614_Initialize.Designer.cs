// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Product.Persistance.Database;

#nullable disable

namespace Product.Persistance.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230330021614_Initialize")]
    partial class Initialize
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Product")
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Product.Domain.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products", "Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Descripcion Producto 1",
                            Name = "Producto 1",
                            Price = 13.5m,
                            Stock = 5
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Descripcion Producto 2",
                            Name = "Producto 2",
                            Price = 24m,
                            Stock = 16
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "Descripcion Producto 3",
                            Name = "Producto 3",
                            Price = 66m,
                            Stock = 8
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
